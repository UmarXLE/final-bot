import os
import yt_dlp
import shutil
import asyncio
import threading
from aiogram.types import FSInputFile

# --- –ö–£–ö–ò –¥–ª—è yt_dlp (–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è COOKIE_DATA)
COOKIE_FILE = "cookies.txt"
cookie_data = os.getenv("COOKIE_DATA")

if cookie_data:
    with open(COOKIE_FILE, "w") as f:
        f.write(cookie_data)

# --- –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä ID –¥–ª—è —Å—Å—ã–ª–æ–∫
def generate_url_id(url: str):
    import hashlib
    return hashlib.md5(url.encode()).hexdigest()

# --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
async def update_progress_message(bot, chat_id, message_id, percent):
    try:
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=f"–ó–∞–≥—Ä—É–∑–∫–∞: {percent:.1f}%"
        )
    except Exception:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)

# --- –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ yt_dlp
def get_ydl_opts(media_type, progress_hook=None):
    ffmpeg = shutil.which("ffmpeg")
    ffmpeg_installed = ffmpeg is not None

    base_opts = {
        'outtmpl': 'downloads/%(title)s.%(ext)s',
        'quiet': True,
        'progress_hooks': [progress_hook] if progress_hook else [],
    }

    if os.path.exists(COOKIE_FILE):
        base_opts['cookiefile'] = COOKIE_FILE

    if media_type == "video":
        base_opts['format'] = (
            'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]' if ffmpeg_installed
            else 'best[ext=mp4]/best'
        )
        base_opts['merge_output_format'] = 'mp4'
    else:
        base_opts['format'] = 'bestaudio[ext=m4a]/bestaudio'

    return base_opts

# --- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
async def download_and_send_media(bot, chat_id, url, media_type):
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É downloads/, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if not os.path.exists('downloads'):
        os.makedirs('downloads')

    sent_message = await bot.send_message(chat_id, "–ó–∞–≥—Ä—É–∑–∫–∞: 0%")

    loop = asyncio.get_event_loop()

    def progress_hook(d):
        if d['status'] == 'downloading':
            total_bytes = d.get('total_bytes') or d.get('total_bytes_estimate') or 1
            downloaded_bytes = d.get('downloaded_bytes', 0)
            percent = downloaded_bytes / total_bytes * 100
            asyncio.run_coroutine_threadsafe(
                update_progress_message(bot, chat_id, sent_message.message_id, percent),
                loop
            )

    ydl_opts = get_ydl_opts(media_type, progress_hook)

    filename = None
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å event loop
        def run_download():
            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                ydl.download([url])

        thread = threading.Thread(target=run_download)
        thread.start()
        thread.join()

        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Å–∫–∞—á–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=False)
            filename = ydl.prepare_filename(info)

        # –£—Ç–æ—á–Ω—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
        if media_type == "video" and not filename.endswith(".mp4"):
            filename = filename.rsplit(".", 1)[0] + ".mp4"
        elif media_type == "audio" and not filename.endswith(".m4a"):
            filename = filename.rsplit(".", 1)[0] + ".m4a"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        media_file = FSInputFile(filename)

        if media_type == 'video':
            await bot.send_video(chat_id, media_file, caption="üé• –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!")
        else:
            await bot.send_audio(chat_id, media_file, caption="üéß –ê—É–¥–∏–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!")

        os.remove(filename)
        await bot.delete_message(chat_id, sent_message.message_id)

    except Exception as e:
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=sent_message.message_id,
            text=f"‚ùå –û—à–∏–±–∫–∞: {e}"
        )
