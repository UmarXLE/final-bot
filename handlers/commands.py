from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram.utils.markdown import hlink

import keyboards.inline_kb as in_kb
import handlers.function as hf
import url_storage as storage

router = Router()

REQUIRED_CHANNEL = '@supasupa212'  # —Ç–≤–æ–π –∫–∞–Ω–∞–ª

def contains_valid_link(text: str) -> bool:
    if not text:
        return False
    text = text.lower()
    return any(domain in text for domain in ["tiktok.com", "youtube.com", "youtu.be"])

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ –¢–∏–∫–¢–æ–∫–∞ –∏–ª–∏ –Æ—Ç—É–±–∞ –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–∫–∞—á–∞—Ç—å –µ–≥–æ!"
    )

@router.message(lambda message: contains_valid_link(message.text))
async def video_request(message: Message, bot):
    try:
        member = await bot.get_chat_member(REQUIRED_CHANNEL, message.from_user.id)
        if member.status in ["left", "kicked"]:
            channel_link = hlink('–ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ', f'https://t.me/{REQUIRED_CHANNEL.lstrip("@")}')
            await message.answer(
                f"üîí –ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª {channel_link} –∏ –Ω–∞–∂–º–∏ /start",
                parse_mode='HTML'
            )
            return
    except Exception:
        await message.answer(
            "‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
        return

    url = message.text.strip()
    url_id = hf.generate_url_id(url)
    storage.url_storage[url_id] = url
    storage.save_url_storage(storage.url_storage)
    storage.url_storage = storage.load_url_storage()

    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏:", reply_markup=await in_kb.format_btn(url_id))

@router.message()
async def handle_invalid(message: Message):
    await cmd_start(message)
